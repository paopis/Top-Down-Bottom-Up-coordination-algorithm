GAMS 24.7.3  r58181 Released Jul 11, 2016 WEX-WEI x86 64bit/MS Windows 08/22/21 22:01:23 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1   
   2  dualx(j1)=sum((R,V,T,P,S )$(VAR_ACT_VM(j1,R,V,T,P,S)),VAR_ACT.M(R,V,T,P,S 
****      $140,120   $120,120,120,120,120  $140                     $140
      ))
   3  +sum((R,V,P  )$(VAR_NCAP_VM(j1,R,V,P )),VAR_NCAP.M(R,V,P ))
****                            $140                   $140
   4  +sum((R,T,Com,S )$(VAR_COMPRD_VM(j1,R,T,Com,S )),VAR_COMPRD.M(R,T,Com,S ))
****              $120               $140                         $140
      ;
   5   
   6  duale(i1)=(sum((R,V,T,P,S)$EQL_CAPACT_EM(i1,R,V,T,P,S),EQL_CAPACT.M(R,V,T,
****      $140,120                           $140                       $140
      P,S))
   7  +sum((R,T,Com,S)$EQG_COMBAL_EM(i1,R,T,Com,S),EQG_COMBAL.M(R,T,Com,S))
****                               $140                       $140
   8  +sum((R,T,Com,S)$EQE_COMPRD_EM(i1,R,T,Com,S),EQE_COMPRD.M(R,T,Com,S))
****                               $140                       $140
   9  +sum((R,V,P)$EQ_NCAP_UPPERB_EM(i1,R,V,P),EQ_NCAP_UPPERB.M(R,V,P)));
****                               $140                       $140
  10   
  11  x(j1)=sum((R,V,T,P,S )$(VAR_ACT_VM(j1,R,V,T,P,S)),VAR_ACT.L(R,V,T,P,S ))
****  $140
  12  +sum((R,V,P  )$(VAR_NCAP_VM(j1,R,V,P )),VAR_NCAP.L(R,V,P ))
  13  +sum((R,T,Com,S )$(VAR_COMPRD_VM(j1,R,T,Com,S )),VAR_COMPRD.L(R,T,Com,S ))
      ;
  14   
  15   
  16  b(i1)=sum((R,V,T,P_prod,S)$EQL_CAPACT_EM(i1,R,V,T,P_prod,S),-NCAP_AF(R,P_p
****  $140                  $120                                         $140   
      rod,S)*PRC_CAPACT(R,P_prod)*NCAP_PASTI(R,"2010",P_prod))
                      $140                 $140     $116
  17  +sum((R,T,Com,S)$EQG_COMBAL_EM(i1,R,T,Com,S),COM_PROJ(R,T,Com))
****                                                      $140
  18  +sum((R,T,Com,S)$EQE_COMPRD_EM(i1,R,T,Com,S),-0)
  19  +sum((R,V,P)$EQ_NCAP_UPPERB_EM(i1,R,V,P),-NCAP_BND(R,V,P));
****                                                   $140
  20   
  21  display b;
  22  display dualx,duale;
  23   
  24   
  25   
  26  qx(data)=0;
****   $140 $120,340
  27  q(data)=0;
****  $140
  28  y(j1)=1$(dualx(j1)=0);
****  $140
  29  qx(d)=sum(data$(ord(data)<=ord(d)),y(data))*y(d);
****     $120,340
  30  y(i1)=1$(duale(i1)=0);
  31  q(d)=sum(data$(ord(data)<=ord(d)),y(data))*y(d);
  32   
  33  nx=sum(d$(ord(d) eq card(d)),qx(d));
****   $140
  34  ne=sum(d$(ord(d) eq card(d)),qx(d))-nx;
****   $140
  35   
  36  *5) Define an indicator array containing the position of the basic variabl
      es
  37   
  38   
  39   
  40  *6) define for decision and slack variables the index of basic variables
  41  ind(j1)=ord(j1)$(y(j1)=1);
****    $140
  42  ind(i1)=(ord(i1))$(y(i1)=1);
  43   
  44   
  45  display y, qx, q,d, ind, ne,nx;
  46  *7) Define a matrix that takes the colums of the tableau corresponding to 
      the
  47  * basic variables
  48   
  49  * extracting the columns from Tab(leau) and allocating them in Base depend
      ing on the ind(j1) indicator.
  50  * ind(j1) is equal to the position on the tableau where the dual is zero.
  51  loop(i1,
  52    loop(j1$(ord(j1)=ind(j1)),Base(i1,j1)=Tab(i1,j1))
****                                 $140       $140
  53    loop(ii1$(ord(ii1)=ind(ii1)),Base(i1,ii1)=Tab(i1,ii1))
****           $120,340
  54  );
  55   
  56   
  57   
  58  * To invert the basis we need to make it run over a single index
  59   
  60  loop (i1,
  61       loop((d,ii1)$(ord(ii1)=q(d)),BB(i1,ii1)=Base(i1,d))
****                                     $140
  62  );
  63   
  64   
  65  display Base;
  66   
  67   
  68   
  69   
  70  execute_unload 'basis.gdx', i1, BB;
****                                   $572
  71  execute '=invert.exe basis.gdx i1 BB D.gdx invb';
  72  execute_load 'D.gdx', invb;
****                           $140
  73   
  74  display T,Base,BB,invb;
  75   
  76  *execute_unload "Tableau.gdx" A,T,Base,BB,invB;
  77   
  78   
  79  Sens(i1)=sum(ii1,invb(i1,ii1)*b(ii1));
****     $140
  80  display Sens;
  81   
  82   
  83  test=sum(i1,duale(i1)*b(i1));
****     $140
  84   
  85  execute_unload "Tableau.gdx" A,Tab,Base,BB,invB,Sens,x,b,duale,test,OBJZ.L
****                               $140$572 $572,572$572 $572,572,572,572      $
      ;
      300
GAMS 24.7.3  r58181 Released Jul 11, 2016 WEX-WEI x86 64bit/MS Windows 08/22/21 22:01:23 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Error Messages


116  Label is unknown
120  Unknown identifier entered as set
140  Unknown symbol
300  Remaining errors not printed for this line
340  A label/element with the same name exist. You may have forgotten
        to quote a label/element reference. For example,
        set i / a,b,c /; parameter x(i); x('a') = 10;
572  Cannot GDX load/unload this type - only sets, parameters
        equations and variables can be used

**** 63 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.172 SECONDS      3 MB  24.7.3 r58181 WEX-WEI


USER: Small MUD - 5 User License                     G160810:1105AO-GEN
      Norwegian University of Science and Technology, Industrial DC7530
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\pisciell.WIN-NTNU-NO\Desktop\SmallLink\OutBasis.gms
Output     C:\Users\pisciell.WIN-NTNU-NO\Desktop\SmallLink\OutBasis.lst

**** USER ERROR(S) ENCOUNTERED
